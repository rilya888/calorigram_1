# Auto-generated module for media handlers extracted from bot_functions.py
from ._shared import *  # imports, constants, helpers
from database import add_meal, add_calorie_check
from constants import MAX_IMAGE_SIZE, MAX_AUDIO_SIZE
import bot_functions as bf  # for cross-module handler calls
from handlers.menu import get_main_menu_keyboard_for_user
from services.food_analysis_service import (
    analyze_food_photo_with_text, 
    analyze_food_photo,
    analyze_food_supplement,
    is_valid_analysis,
    remove_explanations_from_analysis,
    extract_macros_from_analysis,
    extract_dish_name_from_analysis,
    clean_markdown_text
)
from logging_config import get_logger
import aiohttp

logger = get_logger(__name__)

__all__ = []

def validate_image_file(file_data: bytes) -> bool:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Ñ–∞–π–ª–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if len(file_data) > MAX_IMAGE_SIZE:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–≥–∏—á–µ—Å–∫–∏–µ –±–∞–π—Ç—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
        if file_data.startswith(b'\xff\xd8\xff'):  # JPEG
            return True
        elif file_data.startswith(b'\x89PNG\r\n\x1a\n'):  # PNG
            return True
        elif file_data.startswith(b'RIFF') and b'WEBP' in file_data[:12]:  # WebP
            return True
        elif file_data.startswith(b'GIF87a') or file_data.startswith(b'GIF89a'):  # GIF
            return True
        else:
            return False
    except Exception as e:
        logger.error(f"Error validating image file: {e}")
        return False

async def handle_check_photo_text_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–§–æ—Ç–æ + –¢–µ–∫—Å—Ç' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–æ—Ä–∏–π"""
    query = update.callback_query
    await query.answer()
    
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏ –ª–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
    access_info = check_subscription_access(user.id)
    if not access_info['has_access']:
        daily_checks = get_daily_calorie_checks_count(user.id)
        if daily_checks >= 3:
            limit_msg = f"‚ùå **–õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω**\n\n"
            limit_msg += f"–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é '–£–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏' {daily_checks}/3 —Ä–∞–∑ —Å–µ–≥–æ–¥–Ω—è.\n\n"
            limit_msg += f"‚è∞ **–°—á–µ—Ç—á–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–æ–ª–Ω–æ—á—å**\n\n"
            limit_msg += f"üí° **–î–ª—è –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:**\n"
            limit_msg += f"‚Ä¢ 1 –¥–µ–Ω—å - 50 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 7 –¥–Ω–µ–π - 200 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 30 –¥–Ω–µ–π - 500 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 90 –¥–Ω–µ–π - 1200 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 365 –¥–Ω–µ–π - 4000 ‚≠ê\n\n"
            limit_msg += f"üíé –ë–µ–∑–æ–ø–∞—Å–Ω–æ ‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ ‚Ä¢ –ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π"
            
            await query.edit_message_text(
                limit_msg,
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
    context.user_data['waiting_for_check_photo_text'] = True
    
    await query.edit_message_text(
        "üì∑üìù **–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–ª—é–¥–∞**\n\n"
        "**–®–∞–≥ 1:** –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–ª—é–¥–∞\n\n"
        "**–®–∞–≥ 2:** –ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å —É—Ç–æ—á–Ω–µ–Ω–∏—è–º–∏:\n"
        "‚Ä¢ –†–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ (\"–±–æ–ª—å—à–∞—è —Ç–∞—Ä–µ–ª–∫–∞\", \"2 –∫—É—Å–∫–∞\", \"–ø—Ä–∏–º–µ—Ä–Ω–æ 300–≥\")\n"
        "‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (\"—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å—ã—Ä–∞\", \"–±–µ–∑ –º–∞—Å–ª–∞\")\n"
        "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (\"–¥–æ–º–∞—à–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç\", \"–∂–∞—Ä–µ–Ω–æ–µ\")\n\n"
        "**–ü—Ä–∏–º–µ—Ä—ã —É—Ç–æ—á–Ω–µ–Ω–∏–π:**\n"
        "‚Ä¢ \"–ë–æ–ª—å—à–∞—è –ø–æ—Ä—Ü–∏—è, –¥–∏–∞–º–µ—Ç—Ä 30—Å–º, —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–æ—Ü–∞—Ä–µ–ª–ª—ã\"\n"
        "‚Ä¢ \"2 –∫—É—Å–∫–∞, –¥–æ–º–∞—à–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç, –±–µ–∑ –º–∞—Å–ª–∞\"\n"
        "‚Ä¢ \"–ü—Ä–∏–º–µ—Ä–Ω–æ 250–≥, —Å –¥–≤–æ–π–Ω–æ–π –ø–æ—Ä—Ü–∏–µ–π –º—è—Å–∞\"\n\n"
        "‚ö†Ô∏è **–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —è–∫–æ—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã:**\n"
        "‚Ä¢ –í–∏–ª–∫–∞, –ª–æ–∂–∫–∞, —Ä—É–∫–∞, –º–æ–Ω–µ—Ç–∞ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –º–∞—Å—à—Ç–∞–±–∞\n\n"
        "‚ÑπÔ∏è **–†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω, –Ω–æ –ù–ï —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É**",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_from_meal_selection")]
        ]),
        parse_mode='Markdown'
    )

__all__.append('handle_check_photo_text_callback')

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    is_for_adding = context.user_data.get('waiting_for_photo', False)
    is_for_checking = context.user_data.get('waiting_for_check_photo', False)
    is_for_photo_text = context.user_data.get('waiting_for_photo_text', False)
    is_for_check_photo_text = context.user_data.get('waiting_for_check_photo_text', False)
    
    if not (is_for_adding or is_for_checking or is_for_photo_text or is_for_check_photo_text):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ –±–µ–∑ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        await update.message.reply_text(
            "üì∑ **–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!**\n\n"
            "–ù–æ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n\n"
            "üçΩÔ∏è **–î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ** - –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            "üîç **–£–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏** - –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.",
            reply_markup=get_main_menu_keyboard_for_user(update),
            parse_mode='Markdown'
        )
        return
    
    user = update.effective_user
    photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –≤ –Ω–∞–∏–ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
    context.user_data['waiting_for_photo'] = False
    context.user_data['waiting_for_check_photo'] = False
    context.user_data['waiting_for_photo_text'] = False
    context.user_data['waiting_for_check_photo_text'] = False
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ
    context.user_data.pop('analysis_supplemented', None)
    context.user_data.pop('check_analysis_supplemented', None)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_msg = await update.message.reply_text(
        "üîÑ **–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é...**\n\n"
        "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –ò–ò –º–æ–¥–µ–ª–∏...",
        parse_mode='Markdown'
    )
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        file = await context.bot.get_file(photo.file_id)
        file_url = file.file_path
        
        logger.info(f"Downloading photo from: {file_url}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        import aiohttp
        import ssl
        
        # –°–æ–∑–¥–∞–µ–º SSL –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –º—è–≥–∫–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        ssl_context = ssl.create_default_context()
        ssl_context.check_hostname = False
        ssl_context.verify_mode = ssl.CERT_NONE
        
        connector = aiohttp.TCPConnector(ssl=ssl_context)
        async with aiohttp.ClientSession(connector=connector) as session:
            if file_url.startswith('https://'):
                url = file_url
            else:
                url = f"https://api.telegram.org/file/bot{BOT_TOKEN}/{file_url}"
            
            async with session.get(url) as response:
                logger.info(f"Photo download response: {response.status}")
                
                if response.status != 200:
                    logger.error(f"Failed to download photo: {response.status}")
                    await processing_msg.edit_text(
                        f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n\n"
                        f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status}\n"
                        f"URL: {url}\n"
                        f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto"
                    )
                    return
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                content_length = response.headers.get('content-length')
                if content_length and int(content_length) > MAX_IMAGE_SIZE:
                    await processing_msg.edit_text(
                        f"‚ùå **–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π**\n\n"
                        f"–†–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç {MAX_IMAGE_SIZE // (1024 * 1024)}MB. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.",
                        reply_markup=get_main_menu_keyboard_for_user(update),
                        parse_mode='Markdown'
                    )
                    return
                
                # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
                image_content = await response.read()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
                if len(image_content) > MAX_IMAGE_SIZE:
                    await processing_msg.edit_text(
                        f"‚ùå **–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π**\n\n"
                        f"–†–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç {MAX_IMAGE_SIZE // (1024 * 1024)}MB. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.",
                        reply_markup=get_main_menu_keyboard_for_user(update),
                        parse_mode='Markdown'
                    )
                    return
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                if not validate_image_file(image_content):
                    await processing_msg.edit_text(
                        "‚ùå **–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞**\n\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG, PNG –∏–ª–∏ WebP.",
                        reply_markup=get_main_menu_keyboard_for_user(update),
                        parse_mode='Markdown'
                    )
                    return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏
        logger.info("Starting food photo analysis...")
        analysis_result = await analyze_food_photo(image_content)
        logger.info(f"Analysis result: {analysis_result is not None}")
        
        if analysis_result:
            logger.info(f"Analysis result length: {len(analysis_result)}")
            logger.info(f"Analysis result preview: {analysis_result[:200]}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏
        selected_meal = context.user_data.get('selected_meal_name', '–ü—Ä–∏–µ–º –ø–∏—â–∏')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞
        is_valid = is_valid_analysis(analysis_result) if analysis_result else False
        logger.info(f"Analysis is valid: {is_valid}")
        
        if analysis_result and is_valid:
            # –£–¥–∞–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏—è –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
            analysis_result = remove_explanations_from_analysis(analysis_result)
            
            # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ë–ñ–£
            calories, protein, fat, carbs = extract_macros_from_analysis(analysis_result)
            dish_name = extract_dish_name_from_analysis(analysis_result) or "–ë–ª—é–¥–æ –ø–æ —Ñ–æ—Ç–æ"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
            if is_for_photo_text or is_for_check_photo_text:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
                context.user_data['photo_analysis_result'] = analysis_result
                context.user_data['photo_dish_name'] = dish_name
                context.user_data['photo_calories'] = calories
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
                if is_for_photo_text:
                    context.user_data['waiting_for_text_after_photo'] = True
                else:
                    context.user_data['waiting_for_check_text_after_photo'] = True
                
                await processing_msg.edit_text(
                    "üì∑ **–§–æ—Ç–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!**\n\n"
                    "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å —É—Ç–æ—á–Ω–µ–Ω–∏—è–º–∏:\n"
                    "‚Ä¢ –†–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏\n"
                    "‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n"
                    "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è\n\n"
                    "**–ü—Ä–∏–º–µ—Ä:** \"–ë–æ–ª—å—à–∞—è –ø–æ—Ä—Ü–∏—è, –¥–∏–∞–º–µ—Ç—Ä 30—Å–º, —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–æ—Ü–∞—Ä–µ–ª–ª—ã\"",
                    parse_mode='Markdown'
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–æ—Ä–∏–π
            is_check_mode = context.user_data.get('check_mode', False)
            
            if is_check_mode:
                # –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–æ—Ä–∏–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                context.user_data['original_analysis'] = analysis_result
                context.user_data['original_calories'] = calories
                context.user_data['original_dish_name'] = dish_name
                context.user_data['waiting_for_photo_confirmation'] = True
                context.user_data['check_mode'] = True
                
                cleaned_result = clean_markdown_text(analysis_result)
                result_text = f"üîç **–ê–Ω–∞–ª–∏–∑ –∫–∞–ª–æ—Ä–∏–π**\n\n{cleaned_result}\n\n‚ÑπÔ∏è **–î–∞–Ω–Ω—ã–µ –ù–ï –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É**"
                
                await processing_msg.edit_text(
                    result_text, 
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ?", callback_data="confirm_check_analysis")],
                        [InlineKeyboardButton("‚úèÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="add_to_check_analysis")],
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_analysis")]
                    ]), 
                    parse_mode='Markdown'
                )
            else:
                # –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                context.user_data['original_analysis'] = analysis_result
                context.user_data['original_calories'] = calories
                context.user_data['original_dish_name'] = dish_name
                context.user_data['waiting_for_photo_confirmation'] = True
                context.user_data['save_mode'] = True
                
                meal_info = f"**üçΩÔ∏è {selected_meal}**\n\n{analysis_result}"
                cleaned_meal_info = clean_markdown_text(meal_info)
                
                await processing_msg.edit_text(
                    cleaned_meal_info, 
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ?", callback_data="confirm_analysis")],
                        [InlineKeyboardButton("‚úèÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="add_to_analysis")],
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_analysis")]
                    ]), 
                    parse_mode='Markdown'
                )
        elif analysis_result:
            # –ò–ò –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–∏
            logger.warning(f"Analysis returned but is not valid. Result: {analysis_result[:200]}...")
            await processing_msg.edit_text(
                "‚ùå **–ê–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è**\n\n"
                "–ò–ò –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –±–ª—é–¥–∞ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n\n"
                "**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**\n"
                "‚Ä¢ –ù–∞ —Ñ–æ—Ç–æ –Ω–µ—Ç –µ–¥—ã –∏–ª–∏ –µ–¥–∞ –Ω–µ –≤–∏–¥–Ω–∞\n"
                "‚Ä¢ –°–ª–∏—à–∫–æ–º —Ç–µ–º–Ω–æ–µ –∏–ª–∏ —Ä–∞–∑–º—ã—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"
                "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —è–∫–æ—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –º–∞—Å—à—Ç–∞–±–∞\n\n"
                "**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n"
                "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ —Ñ–æ—Ç–æ —á–µ—Ç–∫–æ –≤–∏–¥–Ω–∞ –µ–¥–∞\n"
                "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –≤–∏–ª–∫—É, –ª–æ–∂–∫—É –∏–ª–∏ —Ä—É–∫—É –¥–ª—è –º–∞—Å—à—Ç–∞–±–∞\n"
                "‚Ä¢ –°–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addtext –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
        else:
            # –ò–ò –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            logger.error("No analysis result returned from API")
            await processing_msg.edit_text(
                "‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞**\n\n"
                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                "‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É\n"
                "‚Ä¢ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
                "‚Ä¢ –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addtext –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logger.error(f"Error processing photo: {e}")
        await processing_msg.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto —Å–Ω–æ–≤–∞.",
            reply_markup=get_main_menu_keyboard_for_user(update)
        )

__all__.append('handle_photo')

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    is_for_adding = context.user_data.get('waiting_for_voice', False)
    is_for_checking = context.user_data.get('waiting_for_check_voice', False)
    
    if not (is_for_adding or is_for_checking):
        return
    
    user = update.effective_user
    voice = update.message.voice
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
    context.user_data['waiting_for_voice'] = False
    context.user_data['waiting_for_check_voice'] = False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_msg = await update.message.reply_text(
        "üîÑ **–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...**\n\n"
        "–ü—Ä–µ–æ–±—Ä–∞–∑—É—é —Ä–µ—á—å –≤ —Ç–µ–∫—Å—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å –ø–æ–º–æ—â—å—é –ò–ò...",
        parse_mode='Markdown'
    )
    
    try:
        logger.info(f"Processing voice message from user {user.id}, duration: {voice.duration}s")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π API –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≥–æ–ª–æ—Å–∞
        async with api_client:
            analysis_result = await api_client.analyze_voice(update, context)
            
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if analysis_result and 'recognized_text' in str(analysis_result):
            # –ï—Å–ª–∏ –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∏–∑–≤–ª–µ–∫–∞–µ–º –µ–≥–æ
            context.user_data['recognized_text'] = analysis_result
        else:
            context.user_data['recognized_text'] = '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
        
        if not analysis_result:
            await processing_msg.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏\n\n"
                "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ –∏ –º–µ–¥–ª–µ–Ω–Ω–µ–µ\n"
                "‚Ä¢ –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –º–∏–∫—Ä–æ—Ñ–æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /addtext –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addvoice —Å–Ω–æ–≤–∞."
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–æ –ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
        if analysis_result == "VOICE_TRANSCRIPTION_UNAVAILABLE":
            await processing_msg.edit_text(
                "üé§ **–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ**\n\n"
                "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á–∏ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏.\n\n"
                "**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:**\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addtext –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n"
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥–∞\n\n"
                "**–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è:**\n"
                "‚Ä¢ \"–ë–æ–ª—å—à–∞—è —Ç–∞—Ä–µ–ª–∫–∞ –±–æ—Ä—â–∞ —Å –º—è—Å–æ–º –∏ —Å–º–µ—Ç–∞–Ω–æ–π\"\n"
                "‚Ä¢ \"–î–≤–∞ –∫—É—Å–∫–∞ –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞\"",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑", callback_data="analyze_text")],
                    [InlineKeyboardButton("üì∑ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ", callback_data="analyze_photo")],
                    [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_from_meal_selection")]
                ]),
                parse_mode='Markdown'
            )
            return
        
        if analysis_result and is_valid_analysis(analysis_result):
            # –£–¥–∞–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏—è –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
            analysis_result = remove_explanations_from_analysis(analysis_result)
            
            # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ë–ñ–£
            calories, protein, fat, carbs = extract_macros_from_analysis(analysis_result)
            dish_name = extract_dish_name_from_analysis(analysis_result) or "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–æ—Ä–∏–π
            is_check_mode = context.user_data.get('check_mode', False)
            
            if is_check_mode:
                # –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–æ—Ä–∏–π - —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
                add_calorie_check(user.id, 'voice')
                
                cleaned_result = clean_markdown_text(analysis_result)
                result_text = f"üîç **–ê–Ω–∞–ª–∏–∑ –∫–∞–ª–æ—Ä–∏–π**\n\n{cleaned_result}\n\n‚ÑπÔ∏è **–î–∞–Ω–Ω—ã–µ –ù–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É**"
                
                await processing_msg.edit_text(
                    result_text, 
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_from_meal_selection")]
                    ]), 
                    parse_mode='Markdown'
                )
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏
                context.user_data['check_mode'] = False
            else:
                # –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
                try:
                    meal_type = context.user_data.get('selected_meal', 'meal_breakfast')
                    selected_meal = context.user_data.get('selected_meal_name', '–ü—Ä–∏–µ–º –ø–∏—â–∏')
                    
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ë–ñ–£ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
                    calories_from_analysis, protein, fat, carbs = extract_macros_from_analysis(analysis_result)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    success = add_meal(
                        telegram_id=user.id,
                        meal_type=meal_type,
                        meal_name=selected_meal,
                        dish_name=dish_name,
                        calories=calories,
                        protein=protein,
                        fat=fat,
                        carbs=carbs,
                        analysis_type="voice"
                    )
                    
                    if success:
                        logger.info(f"Meal saved successfully for user {user.id}")
                        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
                        cleaned_result = clean_markdown_text(analysis_result)
                        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
                        transcription_result = context.user_data.get('recognized_text', '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
                        result_with_transcription = f"**üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:** {transcription_result}\n\n{cleaned_result}"
                        await processing_msg.edit_text(result_with_transcription, reply_markup=get_analysis_result_keyboard(), parse_mode='Markdown')
                    else:
                        logger.warning(f"Failed to save meal for user {user.id}")
                        await processing_msg.edit_text(
                            "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n\n"
                            "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–µ–º–µ –ø–∏—â–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                            reply_markup=get_main_menu_keyboard_for_user(update)
                        )
                    
                except Exception as e:
                    logger.error(f"Error saving meal to database: {e}")
                    await processing_msg.edit_text(
                        "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n\n"
                        "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–µ–º–µ –ø–∏—â–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                        reply_markup=get_main_menu_keyboard_for_user(update)
                )
        elif analysis_result:
            # –ò–ò –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–∏
            transcription_result = context.user_data.get('recognized_text', '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
            await processing_msg.edit_text(
                f"**üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:** {transcription_result}\n\n"
                "‚ùå **–ê–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è**\n\n"
                "–ò–ò –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –±–ª—é–¥–∞ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é.\n\n"
                "**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**\n"
                "‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫—Ä–∞—Ç–∫–æ–µ –∏–ª–∏ –Ω–µ—è—Å–Ω–æ–µ\n"
                "‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏\n"
                "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n\n"
                "**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n"
                "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\n"
                "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–±–æ–ª—å—à–∞—è —Ç–∞—Ä–µ–ª–∫–∞', '2 –∫—É—Å–∫–∞')\n"
                "‚Ä¢ –û–ø–∏—à–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
        else:
            transcription_result = context.user_data.get('recognized_text', '–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
            await processing_msg.edit_text(
                f"**üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:** {transcription_result}\n\n"
                "‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞**\n\n"
                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ –£–∫–∞–∑–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
                "‚Ä¢ –í–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏\n"
                "‚Ä¢ –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addvoice —Å–Ω–æ–≤–∞.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logger.error(f"Error processing voice: {e}")
        await processing_msg.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addvoice —Å–Ω–æ–≤–∞.",
            reply_markup=get_main_menu_keyboard_for_user(update)
        )

__all__.append('handle_voice')

async def handle_check_photo_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ê–Ω–∞–ª–∏–∑ –ø–æ —Ñ–æ—Ç–æ' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–æ—Ä–∏–π"""
    query = update.callback_query
    await query.answer()
    
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏ –ª–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
    access_info = check_subscription_access(user.id)
    if not access_info['has_access']:
        daily_checks = get_daily_calorie_checks_count(user.id)
        if daily_checks >= 3:
            limit_msg = f"‚ùå **–õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω**\n\n"
            limit_msg += f"–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é '–£–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏' {daily_checks}/3 —Ä–∞–∑ —Å–µ–≥–æ–¥–Ω—è.\n\n"
            limit_msg += f"‚è∞ **–°—á–µ—Ç—á–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–æ–ª–Ω–æ—á—å**\n\n"
            limit_msg += f"üí° **–î–ª—è –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:**\n"
            limit_msg += f"‚Ä¢ 1 –¥–µ–Ω—å - 50 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 7 –¥–Ω–µ–π - 200 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 30 –¥–Ω–µ–π - 500 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 90 –¥–Ω–µ–π - 1200 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 365 –¥–Ω–µ–π - 4000 ‚≠ê\n\n"
            limit_msg += f"üíé –ë–µ–∑–æ–ø–∞—Å–Ω–æ ‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ ‚Ä¢ –ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π"
            
            await query.edit_message_text(
                limit_msg,
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            return
    
    await query.message.reply_text(
        "üì∑ **–ê–Ω–∞–ª–∏–∑ –ø–æ —Ñ–æ—Ç–æ**\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –µ–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–ª–æ—Ä–∏–π.\n\n"
        "‚ÑπÔ∏è **–†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω, –Ω–æ –ù–ï —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É**",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_from_meal_selection")]
        ]),
        parse_mode='Markdown'
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    context.user_data['waiting_for_check_photo'] = True
    context.user_data['check_mode'] = True

__all__.append('handle_check_photo_callback')

async def handle_check_voice_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ê–Ω–∞–ª–∏–∑ –ø–æ –≥–æ–ª–æ—Å—É' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–æ—Ä–∏–π"""
    query = update.callback_query
    await query.answer()
    
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏ –ª–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
    access_info = check_subscription_access(user.id)
    if not access_info['has_access']:
        daily_checks = get_daily_calorie_checks_count(user.id)
        if daily_checks >= 3:
            limit_msg = f"‚ùå **–õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω**\n\n"
            limit_msg += f"–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é '–£–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏' {daily_checks}/3 —Ä–∞–∑ —Å–µ–≥–æ–¥–Ω—è.\n\n"
            limit_msg += f"‚è∞ **–°—á–µ—Ç—á–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–æ–ª–Ω–æ—á—å**\n\n"
            limit_msg += f"üí° **–î–ª—è –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:**\n"
            limit_msg += f"‚Ä¢ 1 –¥–µ–Ω—å - 50 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 7 –¥–Ω–µ–π - 200 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 30 –¥–Ω–µ–π - 500 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 90 –¥–Ω–µ–π - 1200 ‚≠ê\n"
            limit_msg += f"‚Ä¢ 365 –¥–Ω–µ–π - 4000 ‚≠ê\n\n"
            limit_msg += f"üíé –ë–µ–∑–æ–ø–∞—Å–Ω–æ ‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ ‚Ä¢ –ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π"
            
            await query.edit_message_text(
                limit_msg,
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            return
    
    await query.message.reply_text(
        "üé§ **–ê–Ω–∞–ª–∏–∑ –ø–æ –≥–æ–ª–æ—Å—É**\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –±–ª—é–¥–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–ª–æ—Ä–∏–π.\n\n"
        "‚ÑπÔ∏è **–†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω, –Ω–æ –ù–ï —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É**",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_from_meal_selection")]
        ]),
        parse_mode='Markdown'
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    context.user_data['waiting_for_check_voice'] = True
    context.user_data['check_mode'] = True

__all__.append('handle_check_voice_callback')

async def handle_analyze_photo_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ê–Ω–∞–ª–∏–∑ –ø–æ —Ñ–æ—Ç–æ'"""
    query = update.callback_query
    await query.answer()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
    context.user_data['waiting_for_photo'] = True
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏
    selected_meal = context.user_data.get('selected_meal_name', '–ü—Ä–∏–µ–º –ø–∏—â–∏')
    
    await query.edit_message_text(
        f"üì∏ **–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –µ–¥—ã - {selected_meal}**\n\n"
        "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –±–ª—é–¥–∞, –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å.\n\n"
        "‚ö†Ô∏è **–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —è–∫–æ—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã:**\n"
        "‚Ä¢ –í–∏–ª–∫–∞\n"
        "‚Ä¢ –õ–æ–∂–∫–∞\n"
        "‚Ä¢ –†—É–∫–∞\n"
        "‚Ä¢ –ú–æ–Ω–µ—Ç–∞\n"
        "‚Ä¢ –î—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –º–∞—Å—à—Ç–∞–±–∞\n\n"
        "–ú–æ–¥–µ–ª—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ –∏ –≤–µ—Ä–Ω–µ—Ç:\n"
        "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞\n"
        "‚Ä¢ –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π –≤–µ—Å\n"
        "‚Ä¢ –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å\n"
        "‚Ä¢ –†–∞—Å–∫–ª–∞–¥–∫—É –ø–æ –ë–ñ–£",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_analysis")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø—Ä–∏–µ–º–∞–º –ø–∏—â–∏", callback_data="add_dish")]
        ]),
        parse_mode='Markdown'
    )

__all__.append('handle_analyze_photo_callback')

async def handle_analyze_voice_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ê–Ω–∞–ª–∏–∑ –ø–æ –≥–æ–ª–æ—Å–æ–≤–æ–º—É'"""
    query = update.callback_query
    await query.answer()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    context.user_data['waiting_for_voice'] = True
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏
    selected_meal = context.user_data.get('selected_meal_name', '–ü—Ä–∏–µ–º –ø–∏—â–∏')
    
    await query.edit_message_text(
        f"üé§ **–ê–Ω–∞–ª–∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –±–ª—é–¥–∞ - {selected_meal}**\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –±–ª—é–¥–∞, –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å.\n\n"
        "**–ü—Ä–∏–º–µ—Ä—ã –æ–ø–∏—Å–∞–Ω–∏–π:**\n"
        "‚Ä¢ \"–ë–æ–ª—å—à–∞—è —Ç–∞—Ä–µ–ª–∫–∞ –±–æ—Ä—â–∞ —Å –º—è—Å–æ–º –∏ —Å–º–µ—Ç–∞–Ω–æ–π\"\n"
        "‚Ä¢ \"–î–≤–∞ –∫—É—Å–∫–∞ –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞\"\n"
        "‚Ä¢ \"–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Å—ã—Ä–æ–º –ø–∞—Ä–º–µ–∑–∞–Ω\"\n"
        "‚Ä¢ \"–ü–æ—Ä—Ü–∏—è –∂–∞—Ä–µ–Ω–æ–π –∫–∞—Ä—Ç–æ—à–∫–∏ —Å –ª—É–∫–æ–º\"\n\n"
        "**–£–∫–∞–∂–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:**\n"
        "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞\n"
        "‚Ä¢ –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏\n"
        "‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n\n"
        "–ú–æ–¥–µ–ª—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–µ—Ä–Ω–µ—Ç:\n"
        "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞\n"
        "‚Ä¢ –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π –≤–µ—Å\n"
        "‚Ä¢ –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å\n"
        "‚Ä¢ –†–∞—Å–∫–ª–∞–¥–∫—É –ø–æ –ë–ñ–£",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_analysis")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø—Ä–∏–µ–º–∞–º –ø–∏—â–∏", callback_data="add_dish")]
        ]),
        parse_mode='Markdown'
    )

__all__.append('handle_analyze_voice_callback')

async def handle_analyze_photo_text_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–§–æ—Ç–æ + –¢–µ–∫—Å—Ç' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞"""
    query = update.callback_query
    await query.answer()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
    context.user_data['waiting_for_photo_text'] = True
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏
    selected_meal = context.user_data.get('selected_meal_name', '–ü—Ä–∏–µ–º –ø–∏—â–∏')
    
    await query.edit_message_text(
        f"üì∑üìù **–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–ª—é–¥–∞ - {selected_meal}**\n\n"
        "**–®–∞–≥ 1:** –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–ª—é–¥–∞\n\n"
        "**–®–∞–≥ 2:** –ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å —É—Ç–æ—á–Ω–µ–Ω–∏—è–º–∏:\n"
        "‚Ä¢ –†–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ (\"–±–æ–ª—å—à–∞—è —Ç–∞—Ä–µ–ª–∫–∞\", \"2 –∫—É—Å–∫–∞\", \"–ø—Ä–∏–º–µ—Ä–Ω–æ 300–≥\")\n"
        "‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (\"—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å—ã—Ä–∞\", \"–±–µ–∑ –º–∞—Å–ª–∞\")\n"
        "‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (\"–¥–æ–º–∞—à–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç\", \"–∂–∞—Ä–µ–Ω–æ–µ\")\n\n"
        "**–ü—Ä–∏–º–µ—Ä—ã —É—Ç–æ—á–Ω–µ–Ω–∏–π:**\n"
        "‚Ä¢ \"–ë–æ–ª—å—à–∞—è –ø–æ—Ä—Ü–∏—è, –¥–∏–∞–º–µ—Ç—Ä 30—Å–º, —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–æ—Ü–∞—Ä–µ–ª–ª—ã\"\n"
        "‚Ä¢ \"2 –∫—É—Å–∫–∞, –¥–æ–º–∞—à–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç, –±–µ–∑ –º–∞—Å–ª–∞\"\n"
        "‚Ä¢ \"–ü—Ä–∏–º–µ—Ä–Ω–æ 250–≥, —Å –¥–≤–æ–π–Ω–æ–π –ø–æ—Ä—Ü–∏–µ–π –º—è—Å–∞\"\n\n"
        "‚ö†Ô∏è **–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —è–∫–æ—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã:**\n"
        "‚Ä¢ –í–∏–ª–∫–∞, –ª–æ–∂–∫–∞, —Ä—É–∫–∞, –º–æ–Ω–µ—Ç–∞ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –º–∞—Å—à—Ç–∞–±–∞\n\n"
        "–ú–æ–¥–µ–ª—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ —Ñ–æ—Ç–æ, –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_analysis")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø—Ä–∏–µ–º–∞–º –ø–∏—â–∏", callback_data="add_dish")]
        ]),
        parse_mode='Markdown'
    )

__all__.append('handle_analyze_photo_text_callback')

async def handle_photo_with_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    user = update.effective_user
    message = update.message
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç
        photo = message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
        caption = message.caption or ""
        
        if not caption.strip():
            # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Ñ–æ—Ç–æ
            await handle_photo(update, context)
            return
        
        logger.info(f"Processing photo with text from user {user.id}: '{caption[:50]}...'")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await message.reply_text(
            "üîç **–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç...**\n\n"
            f"üìù –í–∞—à —Ç–µ–∫—Å—Ç: {caption}\n\n"
            "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
            parse_mode='Markdown'
        )
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        photo_file = await context.bot.get_file(photo.file_id)
        
        async with aiohttp.ClientSession() as session:
            async with session.get(photo_file.file_path) as response:
                if response.status != 200:
                    await processing_msg.edit_text(
                        "‚ùå **–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ**\n\n"
                        "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                        reply_markup=get_main_menu_keyboard_for_user(update),
                        parse_mode='Markdown'
                    )
                    return
                
                image_content = await response.read()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                if len(image_content) > MAX_IMAGE_SIZE:
                    await processing_msg.edit_text(
                        f"‚ùå **–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π**\n\n"
                        f"–†–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç {MAX_IMAGE_SIZE // (1024 * 1024)}MB. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.",
                        reply_markup=get_main_menu_keyboard_for_user(update),
                        parse_mode='Markdown'
                    )
                    return
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                if not validate_image_file(image_content):
                    await processing_msg.edit_text(
                        "‚ùå **–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞**\n\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG, PNG –∏–ª–∏ WebP.",
                        reply_markup=get_main_menu_keyboard_for_user(update),
                        parse_mode='Markdown'
                    )
                    return
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç (–ü–†–û–ú–ü–¢ 1 + –ü–†–û–ú–ü–¢ 2)
        logger.info("Starting photo+text analysis...")
        
        # –°–Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ (–ü–†–û–ú–ü–¢ 1)
        photo_analysis = await analyze_food_photo(image_content)
        if not photo_analysis:
            await processing_msg.edit_text(
                "‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ**\n\n"
                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            return
        
        # –ó–∞—Ç–µ–º –¥–æ–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–º (–ü–†–û–ú–ü–¢ 2)
        analysis_result = await analyze_food_supplement(photo_analysis, caption)
        logger.info(f"Photo+text analysis result: {analysis_result is not None}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        context.user_data['photo_analysis_for_supplement'] = photo_analysis
        
        if analysis_result:
            logger.info(f"Analysis result length: {len(analysis_result)}")
            logger.info(f"Analysis result preview: {analysis_result[:200]}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏
        selected_meal = context.user_data.get('selected_meal_name', '–ü—Ä–∏–µ–º –ø–∏—â–∏')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞
        is_valid = is_valid_analysis(analysis_result) if analysis_result else False
        logger.info(f"Analysis is valid: {is_valid}")
        
        if is_valid:
            # –£–¥–∞–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏—è –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
            analysis_result = remove_explanations_from_analysis(analysis_result)
            
            # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ë–ñ–£
            calories, protein, fat, carbs = extract_macros_from_analysis(analysis_result)
            dish_name = extract_dish_name_from_analysis(analysis_result) or caption[:50]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–æ—Ä–∏–π
            is_check_mode = context.user_data.get('check_mode', False)
            
            if is_check_mode:
                # –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–æ—Ä–∏–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                add_calorie_check(user.id, 'photo_text')
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                context.user_data['original_analysis'] = analysis_result
                context.user_data['original_calories'] = calories
                context.user_data['original_dish_name'] = dish_name
                context.user_data['waiting_for_photo_text_confirmation'] = True
                context.user_data['check_mode'] = True
                
                cleaned_result = clean_markdown_text(analysis_result)
                result_text = f"üîç **–ê–Ω–∞–ª–∏–∑ –∫–∞–ª–æ—Ä–∏–π (—Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç)**\n\n{cleaned_result}\n\n‚ÑπÔ∏è **–î–∞–Ω–Ω—ã–µ –ù–ï –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É**"
                
                await processing_msg.edit_text(
                    result_text, 
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ?", callback_data="confirm_photo_text_check_analysis")],
                        [InlineKeyboardButton("‚úèÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="add_to_photo_text_check_analysis")],
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_analysis")]
                    ]), 
                    parse_mode='Markdown'
                )
            else:
                # –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                context.user_data['original_analysis'] = analysis_result
                context.user_data['original_calories'] = calories
                context.user_data['original_dish_name'] = dish_name
                context.user_data['waiting_for_photo_text_confirmation'] = True
                context.user_data['save_mode'] = True
                
                meal_info = f"**üçΩÔ∏è {selected_meal}**\n\n{analysis_result}"
                cleaned_meal_info = clean_markdown_text(meal_info)
                
                await processing_msg.edit_text(
                    cleaned_meal_info, 
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ?", callback_data="confirm_photo_text_analysis")],
                        [InlineKeyboardButton("‚úèÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="add_to_photo_text_analysis")],
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_analysis")]
                    ]), 
                    parse_mode='Markdown'
                )
        elif analysis_result:
            # –ò–ò –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–∏
            await processing_msg.edit_text(
                f"**üìù –í–∞—à —Ç–µ–∫—Å—Ç:** {caption}\n\n"
                "‚ùå **–ê–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è**\n\n"
                "–ò–ò –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –±–ª—é–¥–∞ –ø–æ —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏—é.\n\n"
                "**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**\n"
                "‚Ä¢ –§–æ—Ç–æ –Ω–µ—á–µ—Ç–∫–æ–µ –∏–ª–∏ –ø–ª–æ—Ö–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞\n"
                "‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫—Ä–∞—Ç–∫–æ–µ –∏–ª–∏ –Ω–µ—è—Å–Ω–æ–µ\n"
                "‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏\n"
                "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n\n"
                "**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n"
                "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\n"
                "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–±–æ–ª—å—à–∞—è —Ç–∞—Ä–µ–ª–∫–∞', '2 –∫—É—Å–∫–∞')\n"
                "‚Ä¢ –û–ø–∏—à–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
        else:
            await processing_msg.edit_text(
                f"**üìù –í–∞—à —Ç–µ–∫—Å—Ç:** {caption}\n\n"
                "‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞**\n\n"
                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ –£–∫–∞–∑–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
                "‚Ä¢ –í–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏\n"
                "‚Ä¢ –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto —Å–Ω–æ–≤–∞.",
                reply_markup=get_main_menu_keyboard_for_user(update),
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logger.error(f"Error in handle_photo_with_text: {e}")
        await message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addphoto —Å–Ω–æ–≤–∞.",
            reply_markup=get_main_menu_keyboard_for_user(update)
        )

__all__.append('handle_photo_with_text')

