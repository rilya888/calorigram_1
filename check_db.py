#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import get_db_connection

def check_user_data(telegram_id: int):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ"""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute('SELECT * FROM users WHERE telegram_id = ?', (telegram_id,))
            user = cursor.fetchone()
            if user:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {dict(user)}")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –æ –ø—Ä–∏–µ–º–∞—Ö –ø–∏—â–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            cursor.execute('''
                SELECT * FROM meals 
                WHERE telegram_id = ? AND DATE(created_at) = DATE('now')
                ORDER BY created_at DESC
            ''', (telegram_id,))
            
            meals = cursor.fetchall()
            print(f"\nüçΩÔ∏è –ó–∞–ø–∏—Å–µ–π –æ –ø—Ä–∏–µ–º–∞—Ö –ø–∏—â–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {len(meals)}")
            
            for i, meal in enumerate(meals, 1):
                meal_dict = dict(meal)
                print(f"\n{i}. {meal_dict.get('meal_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} ({meal_dict.get('meal_type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')})")
                print(f"   –ë–ª—é–¥–æ: {meal_dict.get('dish_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"   –ö–∞–ª–æ—Ä–∏–∏: {meal_dict.get('calories', 0)}")
                print(f"   –ë–µ–ª–∫–∏: {meal_dict.get('protein', 0)}–≥")
                print(f"   –ñ–∏—Ä—ã: {meal_dict.get('fat', 0)}–≥")
                print(f"   –£–≥–ª–µ–≤–æ–¥—ã: {meal_dict.get('carbs', 0)}–≥")
                print(f"   –î–∞—Ç–∞: {meal_dict.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"   –¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞: {meal_dict.get('analysis_type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            cursor.execute('''
                SELECT 
                    SUM(calories) as total_calories,
                    SUM(protein) as total_protein,
                    SUM(fat) as total_fat,
                    SUM(carbs) as total_carbs,
                    COUNT(*) as meals_count
                FROM meals 
                WHERE telegram_id = ? AND DATE(created_at) = DATE('now')
            ''', (telegram_id,))
            
            stats = cursor.fetchone()
            if stats:
                stats_dict = dict(stats)
                print(f"\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:")
                print(f"   –ö–∞–ª–æ—Ä–∏–∏: {stats_dict.get('total_calories', 0)}")
                print(f"   –ë–µ–ª–∫–∏: {stats_dict.get('total_protein', 0)}–≥")
                print(f"   –ñ–∏—Ä—ã: {stats_dict.get('total_fat', 0)}–≥")
                print(f"   –£–≥–ª–µ–≤–æ–¥—ã: {stats_dict.get('total_carbs', 0)}–≥")
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {stats_dict.get('meals_count', 0)}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python check_db.py <telegram_id>")
        return
    
    try:
        telegram_id = int(sys.argv[1])
        check_user_data(telegram_id)
    except ValueError:
        print("‚ùå –û—à–∏–±–∫–∞: telegram_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
